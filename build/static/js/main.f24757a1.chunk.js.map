{"version":3,"sources":["components/header/index.module.scss","components/step2/index.module.scss","components/step3/index.module.scss","components/step4/index.module.scss","components/step5/index.module.scss","components/step6/index.module.scss","components/step7/index.module.scss","components/step1/index.tsx","components/step7/components/card/index.tsx","routes.ts","components/step2/index.tsx","components/step3/index.tsx","components/step4/index.tsx","components/step5/index.tsx","components/step6/index.tsx","components/step7/index.tsx","components/header/index.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["module","exports","Wrap","styled","div","Card","t","className","ROUTES","link","Component","useState","time","setTime","timerActive","setTimerActive","useEffect","increaseInterval","setInterval","state","clearInterval","onClick","start","setStart","counter","setCounter","counterRef","useRef","current","timerRef","styles","step2","step","setStep","intervalState","setIntervalState","startFrom","setStartFrom","Number","resetHandler","inputHandler","setState","event","v","target","value","onChange","type","decrement","setDecrement","checked","timeValidation","setTimeValidation","typeTime","setTypeTime","timeAdopter","ss","mm","Math","floor","style","backgroundColor","split","length","console","log","test","placeholder","inc","dec","newState","Header","header","map","i","to","GlobalCss","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f24757a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__3s5zs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"step2\":\"step2_step2__1yWU3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"step2\":\"step3_step2__2eX4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"step2\":\"step4_step2__quCaG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"step2\":\"step5_step2__2pHEe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"step2\":\"step6_step2__3a1WF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"step2\":\"step7_step2__2EYz0\"};","import React, {useEffect, useState} from 'react';\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst Wrap = styled.div`\r\n  width: 220px;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n\r\n`\r\n\r\n\r\nexport const Step1: React.FC = () => {\r\n    const [time, setTime] = useState<number>(0);\r\n    const [timerActive, setTimerActive] = useState<boolean>(true);\r\n    \r\n    const resetTimer = () => {\r\n        setTimerActive(false);\r\n        setTime(0);\r\n        setTimerActive(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const increaseInterval = setInterval(() => {\r\n            if (timerActive) setTime(state => state + 1)\r\n        }, 1000);\r\n\r\n        return () => clearInterval(increaseInterval);\r\n    }, [timerActive]);\r\n    return <section>\r\n\r\n        <Wrap>\r\n            <h2>Step 1 </h2>\r\n            <div className={'timer'}>\r\n                {time}\r\n            </div>\r\n\r\n            <button className={'button'}\r\n                    onClick={() => setTimerActive(!timerActive)}>{timerActive ? 'Stop' : 'Start'}</button>\r\n            <button className={'button'} onClick={resetTimer}>Reset</button>\r\n\r\n        </Wrap>\r\n    </section>\r\n\r\n}","import React from \"react\";\r\n\r\ninterface CardProps {\r\n    t: string | number\r\n}\r\n\r\nexport const Card: React.FC<CardProps> = ({t}) => {\r\n\r\n    return (\r\n        <div className={'card'}>\r\n            <div className=\"timer\">\r\n                {t}\r\n            </div>\r\n\r\n            card\r\n        </div>\r\n    )\r\n}","import {Step1} from \"./components/step1\";\r\nimport {Step2} from \"./components/step2\";\r\nimport {Step3} from \"./components/step3\";\r\nimport {Step4} from \"./components/step4\";\r\nimport {Step5} from \"./components/step5\";\r\nimport {Step6} from \"./components/step6\";\r\nimport {Step7} from \"./components/step7\";\r\n\r\nexport const ROUTES = [\r\n\r\n    {\r\n        link: '/',\r\n        Component: Step1\r\n    },\r\n    {\r\n        link: 'step2',\r\n        Component: Step2\r\n    },\r\n    {\r\n        link: 'step3',\r\n        Component: Step3\r\n    },\r\n    {\r\n        link: 'step4',\r\n        Component: Step4\r\n    }\r\n    ,\r\n    {\r\n        link: 'step5',\r\n        Component: Step5\r\n    },\r\n    {\r\n        link: 'step6',\r\n        Component: Step6\r\n    },\r\n    {\r\n        link: 'step7',\r\n        Component: Step7\r\n    }\r\n]","import React, {useEffect, useRef, useState} from 'react';\r\nimport styles from './index.module.scss'\r\n\r\n\r\nexport const Step2: React.FC = () => {\r\n    const [start, setStart] = useState(false);\r\n    const [counter, setCounter] = useState(0);\r\n\r\n    const counterRef = useRef<number>(0);\r\n    counterRef.current = counter;\r\n\r\n\r\n    //ref for using clearTimeout in  functions\r\n    const timerRef = useRef<ReturnType<typeof setInterval> | undefined>();\r\n    useEffect(() => {\r\n        timerRef.current = setInterval(() => {\r\n            setCounter(counterRef.current + 1)\r\n        }, 1000)\r\n        return () => timerRef.current && clearInterval(timerRef.current)\r\n    }, [])\r\n\r\n\r\n    const startToggle = () => {\r\n        setStart(!start)\r\n        if (!start && timerRef.current) {\r\n            clearInterval(timerRef.current)\r\n        }\r\n        if (start && timerRef.current) {\r\n            timerRef.current = setInterval(() => {\r\n                setCounter(counterRef.current + 1)\r\n            }, 1000)\r\n        }\r\n    }\r\n    const resetHandler = () => {\r\n        if (timerRef.current) {\r\n            clearInterval(timerRef.current);\r\n            setStart(true);\r\n            setCounter(0);\r\n        }\r\n    }\r\n    return <section className={styles.step2}>\r\n        <h1> step 2</h1>\r\n\r\n        <div className={'card'}>\r\n            <div className=\"timer\">\r\n                {counter}\r\n            </div>\r\n\r\n            card\r\n        </div>\r\n        <div className=\"button-container\">\r\n            <button onClick={startToggle} className={'button'}> {start ? 'start' : 'stop'} </button>\r\n            <button onClick={resetHandler} className={'button'}> reset</button>\r\n        </div>\r\n\r\n    </section>\r\n\r\n}","import React, {useEffect, useRef, useState} from 'react';\r\nimport styles from './index.module.scss'\r\n\r\n\r\nexport const Step3: React.FC = () => {\r\n    const [start, setStart] = useState(false);\r\n    const [counter, setCounter] = useState(0);\r\n\r\n    const counterRef = useRef<number>(0);\r\n    counterRef.current = counter;\r\n\r\n\r\n    //ref for using clearTimeout in  functions\r\n    const timerRef = useRef<ReturnType<typeof setInterval> | undefined>();\r\n    useEffect(() => {\r\n        timerRef.current = setInterval(() => {\r\n            setCounter(counterRef.current + 1)\r\n        }, 1000)\r\n        return () => timerRef.current && clearInterval(timerRef.current)\r\n    }, [])\r\n\r\n\r\n    const startToggle = () => {\r\n        setStart(!start)\r\n        if (!start && timerRef.current) {\r\n            clearInterval(timerRef.current)\r\n        }\r\n        if (start && timerRef.current) {\r\n            timerRef.current = setInterval(() => {\r\n                setCounter(counterRef.current + 1)\r\n            }, 1000)\r\n        }\r\n    }\r\n    const resetHandler = () => {\r\n        if (timerRef.current) {\r\n            clearInterval(timerRef.current);\r\n            setStart(true);\r\n            setCounter(0);\r\n        }\r\n    }\r\n    return <section className={styles.step2}>\r\n        <h1> step 3</h1>\r\n        <div className=\"card-container\">\r\n            <div className={'card'}>\r\n                <div className=\"timer\">\r\n                    {counter}\r\n                </div>\r\n\r\n                card\r\n            </div>\r\n            <div className={'card'}>\r\n                <div className=\"timer\">\r\n                    {counter}\r\n                </div>\r\n\r\n                card\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"button-container\">\r\n            <button onClick={startToggle} className={'button'}> {start ? 'start' : 'stop'} </button>\r\n            <button onClick={resetHandler} className={'button'}> reset</button>\r\n        </div>\r\n\r\n    </section>\r\n\r\n}","import React, {useEffect, useRef, useState} from 'react';\r\nimport styles from './index.module.scss'\r\n\r\n\r\nexport const Step4: React.FC = () => {\r\n    const [start, setStart] = useState(false);\r\n    const [step, setStep] = useState('1');\r\n    const [intervalState, setIntervalState] = useState('1000');\r\n    const [startFrom, setStartFrom] = useState('100');\r\n    const counterRef = useRef<number>(Number(startFrom));\r\n    const [counter, setCounter] = useState(Number(startFrom));\r\n    counterRef.current = counter;\r\n\r\n\r\n    //ref for using clearTimeout in  functions\r\n    const timerRef = useRef<ReturnType<typeof setInterval> | undefined>();\r\n    useEffect(() => {\r\n        timerRef.current = setInterval(() => {\r\n            setCounter(counterRef.current + Number(step))\r\n        }, Number(intervalState))\r\n        return () => timerRef.current && clearInterval(timerRef.current)\r\n    }, [])\r\n\r\n\r\n    const startToggle = () => {\r\n        setStart(!start)\r\n        if (!start && timerRef.current) {\r\n            clearInterval(timerRef.current)\r\n        }\r\n        if (start && timerRef.current) {\r\n            timerRef.current = setInterval(() => {\r\n                setCounter(counterRef.current + Number(step))\r\n            }, Number(intervalState))\r\n        }\r\n    }\r\n    const resetHandler = () => {\r\n        if (timerRef.current) {\r\n            clearInterval(timerRef.current);\r\n            setStart(true);\r\n            setCounter(Number(startFrom));\r\n        }\r\n    }\r\n\r\n    const inputHandler = (setState: React.Dispatch<React.SetStateAction<string>>) => {\r\n        return (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n            const v = event.target.value;\r\n\r\n            if (Number(v) >= 0) {\r\n                setState(event.target.value)\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return <section className={styles.step2}>\r\n        <h1> step 4</h1>\r\n        <div className=\"card-container\">\r\n            <div className={'card'}>\r\n                <div className=\"timer\">\r\n                    {counter}\r\n                </div>\r\n\r\n                card\r\n            </div>\r\n            <div className={'card'}>\r\n                <div className=\"timer\">\r\n                    {counter}\r\n                </div>\r\n\r\n                card\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"button-container\">\r\n            <button onClick={startToggle} className={'button'}> {start ? 'start' : 'stop'} </button>\r\n            <button onClick={resetHandler} className={'button'}> reset</button>\r\n        </div>\r\n        <div className=\"label-box\">\r\n            <label> <span> x increment      </span>\r\n                <input onChange={inputHandler(setStep)} value={step} type=\"text\"/>\r\n            </label>\r\n            <label> <span> y interval (ms)     </span>\r\n                <input onChange={inputHandler(setIntervalState)} value={intervalState} type=\"text\"/>\r\n            </label>\r\n            <label> <span> z start from      </span>\r\n                <input onChange={inputHandler(setStartFrom)} value={startFrom} type=\"text\"/>\r\n            </label>\r\n\r\n            <button className={'button'} onClick={resetHandler}> reset to new Z</button>\r\n        </div>\r\n\r\n\r\n    </section>\r\n\r\n}","import React, {useEffect, useRef, useState} from 'react';\r\nimport styles from './index.module.scss'\r\n\r\n\r\nexport const Step5: React.FC = () => {\r\n    const [start, setStart] = useState(false);\r\n    const [step, setStep] = useState('1');\r\n    const [intervalState, setIntervalState] = useState('1000');\r\n    const [startFrom, setStartFrom] = useState('100');\r\n    const counterRef = useRef<number>(Number(startFrom));\r\n    const [counter, setCounter] = useState(Number(startFrom));\r\n    const [decrement, setDecrement] = useState(-1);\r\n\r\n    counterRef.current = counter;\r\n\r\n    //ref for using clearTimeout in  functions\r\n    const timerRef = useRef<ReturnType<typeof setInterval> | undefined>();\r\n    useEffect(() => {\r\n        timerRef.current = setInterval(() => {\r\n            setCounter(counterRef.current + (Number(step) * decrement))\r\n        }, Number(intervalState))\r\n        return () => timerRef.current && clearInterval(timerRef.current)\r\n    }, [])\r\n\r\n\r\n    const startToggle = () => {\r\n        setStart(!start)\r\n        if (!start && timerRef.current) {\r\n            clearInterval(timerRef.current)\r\n        }\r\n        if (start && timerRef.current) {\r\n            !counter && setCounter(Number(startFrom));\r\n            timerRef.current = setInterval(() => {\r\n                setCounter(counterRef.current + (Number(step) * decrement))\r\n            }, Number(intervalState))\r\n        }\r\n    }\r\n    const resetHandler = () => {\r\n        if (timerRef.current) {\r\n            clearInterval(timerRef.current);\r\n            setStart(true);\r\n            setCounter(Number(startFrom));\r\n        }\r\n    }\r\n    if (counter < 0 && counterRef.current) {\r\n        resetHandler()\r\n        setCounter(0);\r\n\r\n    }\r\n\r\n    const inputHandler = (setState: React.Dispatch<React.SetStateAction<string>>) => {\r\n        return (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n            const v = event.target.value;\r\n\r\n            if (Number(v) >= 0) {\r\n                setState(event.target.value)\r\n            }\r\n\r\n        }\r\n    }\r\n    const switchHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        resetHandler()\r\n\r\n        setDecrement(event.target.checked ? 1 : -1)\r\n\r\n    }\r\n\r\n    return <section className={styles.step2}>\r\n        <h1> step 5</h1>\r\n        <div className=\"card-container\">\r\n            <div className={'card'}>\r\n                <div className=\"timer\">\r\n                    {counter}\r\n                </div>\r\n\r\n                card\r\n            </div>\r\n            <div className={'card'}>\r\n                <div className=\"timer\">\r\n                    {counter}\r\n                </div>\r\n\r\n                card\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"button-container\">\r\n            <button onClick={startToggle} className={'button'}> {start ? 'start' : 'stop'} </button>\r\n            <button onClick={resetHandler} className={'button'}> reset</button>\r\n        </div>\r\n\r\n        <div className=\"switch-box\">\r\n            <span className={'text'}> decrement</span>\r\n            <label className=\"switch\">\r\n                <input onChange={switchHandler} type=\"checkbox\"/>\r\n                <span className=\"slider round\">  </span>\r\n\r\n            </label>\r\n            <span className={'text'}> increment</span>\r\n        </div>\r\n\r\n        <div className=\"label-box\">\r\n            <label> <span> x step      </span>\r\n                <input onChange={inputHandler(setStep)} value={step} type=\"text\"/>\r\n            </label>\r\n            <label> <span> y interval (ms)     </span>\r\n                <input onChange={inputHandler(setIntervalState)} value={intervalState} type=\"text\"/>\r\n            </label>\r\n            <label> <span> z start from      </span>\r\n                <input onChange={inputHandler(setStartFrom)} value={startFrom} type=\"text\"/>\r\n            </label>\r\n\r\n            <button className={'button'} onClick={resetHandler}> reset to new Z</button>\r\n        </div>\r\n\r\n\r\n    </section>\r\n\r\n}","import React, {useEffect, useRef, useState} from 'react';\r\nimport styles from './index.module.scss'\r\n\r\n\r\nexport const Step6: React.FC = () => {\r\n    const [start, setStart] = useState(false);\r\n    const [step, setStep] = useState('1');\r\n    const [intervalState, setIntervalState] = useState('1000');\r\n    const [startFrom, setStartFrom] = useState(180);\r\n    const counterRef = useRef<number>(Number(startFrom));\r\n    const [counter, setCounter] = useState(Number(startFrom));\r\n    const [decrement, setDecrement] = useState(-1);\r\n    const [timeValidation, setTimeValidation] = useState(true);\r\n    const [typeTime, setTypeTime] = useState(true);\r\n    counterRef.current = counter;\r\n\r\n    //ref for using clearTimeout in  functions\r\n    const timerRef = useRef<ReturnType<typeof setInterval> | undefined>();\r\n    useEffect(() => {\r\n        timerRef.current = setInterval(() => {\r\n            setCounter(counterRef.current + (Number(step) * decrement))\r\n        }, Number(intervalState))\r\n        return () => timerRef.current && clearInterval(timerRef.current)\r\n    }, [])\r\n\r\n\r\n    const startToggle = () => {\r\n        setStart(!start)\r\n        if (!start && timerRef.current) {\r\n            clearInterval(timerRef.current)\r\n        }\r\n        if (start && timerRef.current) {\r\n            !counter && setCounter(Number(startFrom));\r\n            timerRef.current = setInterval(() => {\r\n                setCounter(counterRef.current + (Number(step) * decrement))\r\n            }, Number(intervalState))\r\n        }\r\n    }\r\n    const resetHandler = () => {\r\n        if (timerRef.current) {\r\n            clearInterval(timerRef.current);\r\n            setStart(true);\r\n            setCounter(Number(startFrom));\r\n        }\r\n    }\r\n    if (counter < 0 && counterRef.current) {\r\n        resetHandler()\r\n        setCounter(0);\r\n\r\n    }\r\n\r\n    const inputHandler = (setState: React.Dispatch<React.SetStateAction<string>>) => {\r\n        return (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n            const v = event.target.value;\r\n\r\n            if (Number(v) >= 0) {\r\n                setState(event.target.value)\r\n            }\r\n\r\n        }\r\n    }\r\n    const switchHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        resetHandler()\r\n\r\n        setDecrement(event.target.checked ? 1 : -1)\r\n\r\n    }\r\n    const minutesHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const v = event.target.value.split(':');\r\n        const mm = Number(v[v.length - 2]) || 0;\r\n        const ss = Number(v[v.length - 1]) || 0;\r\n        console.log(mm, ss)\r\n        if (/[^0-9:]/.test(event.target.value)) {\r\n            setTimeValidation(false);\r\n            return;\r\n        }\r\n        if (mm > 0 && ss > 60) {\r\n            setTimeValidation(false);\r\n            return\r\n        }\r\n        if (mm > 0) {\r\n            setTypeTime(true)\r\n\r\n        } else {\r\n            setTypeTime(false)\r\n        }\r\n        setStartFrom((mm * 60) + ss)\r\n        setTimeValidation(true)\r\n    }\r\n    const timeAdopter = (time: number) => {\r\n        if (typeTime) {\r\n\r\n            let ss: string | number = time % 60;\r\n\r\n            let mm: string | number = Math.floor(time / 60);\r\n            mm = mm < 10 ? \"0\" + mm : mm;\r\n            ss = ss < 10 ? \"0\" + ss : ss;\r\n            return mm + \":\" + ss\r\n\r\n        } else {\r\n            return time\r\n        }\r\n\r\n    }\r\n    return <section className={styles.step2}>\r\n        <h1> step 6</h1>\r\n        <div className=\"card-container\">\r\n            <div className={'card'}>\r\n                <div className=\"timer\">\r\n                    {timeAdopter(counter)}\r\n                </div>\r\n\r\n                card\r\n            </div>\r\n            <div className={'card'}>\r\n                <div className=\"timer\">\r\n                    {timeAdopter(counter)}\r\n                </div>\r\n\r\n                card\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"button-container\">\r\n            <button onClick={startToggle} className={'button'}> {start ? 'start' : 'stop'} </button>\r\n            <button onClick={resetHandler} className={'button'}> reset</button>\r\n        </div>\r\n\r\n        <div className=\"switch-box\">\r\n            <span className={'text'}> decrement</span>\r\n            <label className=\"switch\">\r\n                <input onChange={switchHandler} type=\"checkbox\"/>\r\n                <span className=\"slider round\">  </span>\r\n\r\n            </label>\r\n            <span className={'text'}> increment</span>\r\n        </div>\r\n\r\n        <div className=\"label-box\">\r\n            <label> <span> x step (s)      </span>\r\n                <input onChange={inputHandler(setStep)} value={step} type=\"text\"/>\r\n            </label>\r\n            <label> <span> y interval (ms)     </span>\r\n                <input onChange={inputHandler(setIntervalState)} value={intervalState} type=\"text\"/>\r\n            </label>\r\n            <label> <span> z start   mm:ss     </span>\r\n                <input style={{backgroundColor: timeValidation ? \"\" : 'red'}} onChange={minutesHandler}\r\n                       placeholder={'3:00'} type=\"text\"/>\r\n            </label>\r\n            <span> you can also type just number without ':' like 123312</span>\r\n\r\n            <button className={'button'} onClick={resetHandler}> reset to new Z</button>\r\n        </div>\r\n\r\n\r\n    </section>\r\n\r\n}","import React, {useEffect, useRef, useState} from 'react';\r\nimport styles from './index.module.scss'\r\nimport {Card} from \"./components/card\";\r\n\r\ninterface Counter {\r\n    inc: number,\r\n    dec: number\r\n}\r\n\r\nexport const Step7: React.FC = () => {\r\n    const [start, setStart] = useState(false);\r\n    const [step, setStep] = useState('1');\r\n    const [intervalState, setIntervalState] = useState('1000');\r\n    const [startFrom, setStartFrom] = useState(180);\r\n    const counterRef = useRef<Counter>({inc: Number(startFrom), dec: Number(startFrom)});\r\n    const [counter, setCounter] = useState({inc: Number(startFrom), dec: Number(startFrom)});\r\n\r\n    const [timeValidation, setTimeValidation] = useState(true);\r\n\r\n    counterRef.current = counter;\r\n\r\n    //ref for using clearTimeout in  functions\r\n    const timerRef = useRef<ReturnType<typeof setInterval> | undefined>();\r\n    useEffect(() => {\r\n        timerRef.current = setInterval(() => {\r\n            const newState = {\r\n                inc: counterRef.current.inc + Number(step),\r\n                dec: counterRef.current.dec - Number(step)\r\n            }\r\n            console.log(counter.dec)\r\n            setCounter({...newState})\r\n        }, Number(intervalState))\r\n        return () => timerRef.current && clearInterval(timerRef.current)\r\n    }, [])\r\n\r\n\r\n    const startToggle = () => {\r\n        setStart(!start)\r\n        if (!start && timerRef.current) {\r\n            clearInterval(timerRef.current)\r\n        }\r\n        if (start && timerRef.current) {\r\n            !counter.dec && setCounter({...counter, dec: Number(startFrom)});\r\n            timerRef.current = setInterval(() => {\r\n                const newState = {\r\n                    inc: counterRef.current.inc + Number(step),\r\n                    dec: counterRef.current.dec - Number(step)\r\n                }\r\n                setCounter({...newState})\r\n            }, Number(intervalState))\r\n        }\r\n    }\r\n    const resetHandler = () => {\r\n        if (timerRef.current) {\r\n            clearInterval(timerRef.current);\r\n            setStart(true);\r\n            setCounter({inc: Number(startFrom), dec: Number(startFrom)});\r\n        }\r\n    }\r\n    if (counter.dec < 0 && counterRef.current) {\r\n        timerRef.current && clearInterval(timerRef.current);\r\n        setStart(true);\r\n        setCounter({...counter, dec: 0});\r\n\r\n    }\r\n\r\n    const inputHandler = (setState: React.Dispatch<React.SetStateAction<string>>) => {\r\n        return (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n            const v = event.target.value;\r\n\r\n            if (Number(v) >= 0) {\r\n                setState(event.target.value)\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const minutesHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const v = event.target.value.split(':');\r\n        const mm = Number(v[v.length - 2]) || 0;\r\n        const ss = Number(v[v.length - 1]) || 0;\r\n        console.log(mm, ss)\r\n        if (/[^0-9:]/.test(event.target.value)) {\r\n            setTimeValidation(false);\r\n            return;\r\n        }\r\n        if (mm > 0 && ss > 60) {\r\n            setTimeValidation(false);\r\n            return\r\n        }\r\n        setStartFrom((mm * 60) + ss)\r\n        setTimeValidation(true)\r\n    }\r\n    const timeAdopter = (time: number) => {\r\n        let ss: string | number = time % 60;\r\n\r\n        let mm: string | number = Math.floor(time / 60);\r\n        mm = mm < 10 ? \"0\" + mm : mm;\r\n        ss = ss < 10 ? \"0\" + ss : ss;\r\n        return mm + \":\" + ss\r\n\r\n    }\r\n    return <section className={styles.step2}>\r\n        <h1> step 7</h1>\r\n        <div className=\"card-container\">\r\n            <Card t={timeAdopter(counter.dec)}/>\r\n            <Card t={timeAdopter(counter.inc)}/>\r\n            <Card t={counter.inc}/>\r\n            <Card t={counter.dec}/>\r\n\r\n        </div>\r\n\r\n        <div className=\"button-container\">\r\n            <button onClick={startToggle} className={'button'}> {start ? 'start' : 'stop'} </button>\r\n            <button onClick={resetHandler} className={'button'}> reset</button>\r\n        </div>\r\n\r\n\r\n        <div className=\"label-box\">\r\n            <label> <span> x step (s)      </span>\r\n                <input onChange={inputHandler(setStep)} value={step} type=\"text\"/>\r\n            </label>\r\n            <label> <span> y interval (ms)     </span>\r\n                <input onChange={inputHandler(setIntervalState)} value={intervalState} type=\"text\"/>\r\n            </label>\r\n            <label> <span> z start   mm:ss     </span>\r\n                <input style={{backgroundColor: timeValidation ? \"\" : 'red'}} onChange={minutesHandler}\r\n                       placeholder={'3:00'} type=\"text\"/>\r\n            </label>\r\n            <span> you can also type just number without ':' like 123312</span>\r\n\r\n            <button className={'button'} onClick={resetHandler}> reset to new Z</button>\r\n        </div>\r\n\r\n\r\n    </section>\r\n\r\n}\r\n\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport styles from './index.module.scss'\r\nimport {ROUTES} from \"../../routes\";\r\n\r\nexport const Header: React.FC = () => {\r\n\r\n    return <header className={styles.header}>\r\n        <nav>\r\n\r\n            <ul>\r\n                {ROUTES.map(({link}, i) => <li key={i}><Link to={link}>{link} </Link></li>)}\r\n            </ul>\r\n        </nav>\r\n \r\n    </header>\r\n\r\n}\r\n","import styled from '@emotion/styled';\r\nimport {Header} from \"./components/header\";\r\nimport {BrowserRouter, Route, Routes} from \"react-router-dom\";\r\nimport {ROUTES} from \"./routes\";\r\n\r\nconst GlobalCss = styled.div`\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  section {\r\n    height: 100%;\r\n    overflow: auto;\r\n    padding: 20px;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n\r\n  .timer {\r\n    border-color: #5c5c5c;\r\n    border-width: 1px;\r\n    border-style: solid solid dashed;\r\n    padding: 8px 48px;\r\n    margin-bottom: 24px;\r\n    border-radius: 8px;\r\n  }\r\n\r\n  .button {\r\n    padding: 4px 24px;\r\n    border-radius: 24px;\r\n    cursor: pointer;\r\n    margin: 0 5px;\r\n  }\r\n\r\n  .wrapper {\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding-top: 70px;\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    min-height: 100vh;\r\n    top: 0;\r\n    overflow: auto;\r\n  }\r\n\r\n  .card {\r\n    box-shadow: 0px 3px 3px -2px rgb(0 0 0 / 20%), 0px 3px 4px 0px rgb(0 0 0 / 14%), 0px 1px 8px 0px rgb(0 0 0 / 12%);\r\n    position: relative;\r\n    width: 300px;\r\n    height: 300px;\r\n    background-color: #fff;\r\n    color: #424242;\r\n    padding: 30px;\r\n    border-radius: 8px;\r\n    text-align: center;\r\n    font-size: 0.875rem;\r\n    font-weight: 700;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 30px;\r\n  }\r\n\r\n`;\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <GlobalCss>\r\n            <BrowserRouter>\r\n                <Header/>\r\n                <div className=\"wrapper\">\r\n                    <Routes>\r\n                        {ROUTES.map(({link, Component}) => {\r\n                            return <Route key={link} path={link} element={<Component/>}/>\r\n                        })}\r\n\r\n                    </Routes>\r\n\r\n                </div>\r\n\r\n\r\n            </BrowserRouter>\r\n        </GlobalCss>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}